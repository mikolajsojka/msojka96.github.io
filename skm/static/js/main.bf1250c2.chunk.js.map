{"version":3,"sources":["apis/server.js","components/Picker/index.js","actions/index.js","actions/types.js","components/App.js","reducers/index.js","reducers/citiesReducer/index.js","reducers/distanceReducer/index.js","index.js"],"names":["axios","defaults","headers","create","baseURL","Picker","state","selectedFrom","To","distance","renderMy","undefined","props","document","getElementById","innerHTML","JSON","stringify","fetch","from","cities","forEach","element","index","style","display","ReactHtmlParser","err","enableButton","value","classList","add","remove","onChangeFrom","e","setState","target","onChangeTo","selectedTo","onClick","a","checkDistance","this","className","id","onChange","React","Component","connect","to","dispatch","myserver","get","response","type","payload","data","App","componentDidMount","fetchCities","combineReducers","action","coomposeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","querySelector"],"mappings":"8RACAA,IAAMC,SAASC,QAAQ,gBAAkB,mBAE1BF,UAAMG,OAAO,CACxBC,QAAS,+E,iBCEPC,G,kNACFC,MAAQ,CAACC,aAAc,GAAIC,GAAI,GAAIC,SAAU,I,EAE7CC,SAAW,gBAC2BC,IAA9B,EAAKC,MAAMH,SAASH,MACpBO,SAASC,eAAe,YAAYC,UAAY,GAEhDF,SAASC,eAAe,YAAYC,UAApC,UAAmDC,KAAKC,UACpD,EAAKL,MAAMH,SAASH,OADxB,O,EAeRY,MAAQ,WACJ,IAAIC,EAAO,GACX,IAOI,OANAA,EAAI,sBACJ,EAAKP,MAAMQ,OAAOd,MAAMe,SAAQ,SAACC,EAASC,GACtCJ,GAAI,wBAAqBI,EAArB,YAA8BD,EAA9B,gBAERT,SAASC,eAAe,UAAUU,MAAMC,QAAU,OAClDZ,SAASC,eAAe,OAAOU,MAAMC,QAAU,QACxCC,IAAgBP,GACzB,MAAOQ,M,EAIbC,aAAe,WAEmC,KAA1Cf,SAASC,eAAe,QAAQe,OACQ,KAAxChB,SAASC,eAAe,MAAMe,MAE9BhB,SAASC,eAAe,UAAUgB,UAAUC,IAAI,WAEhDlB,SAASC,eAAe,UAAUgB,UAAUE,OAAO,Y,EAI3DC,aAAe,SAAAC,GACX,EAAKC,SAAS,CAAC5B,aAAc2B,EAAEE,OAAOP,S,EAG1CQ,WAAa,SAAAH,GACT,EAAKC,SAAS,CAACG,WAAYJ,EAAEE,OAAOP,S,EAGxCU,Q,sBAAU,sBAAAC,EAAA,6DACN3B,SAASC,eAAe,UAAUU,MAAMC,QAAU,QAClDZ,SAASC,eAAe,OAAOU,MAAMC,QAAU,OAC/CZ,SAASC,eAAe,YAAYC,UAAY,GAH1C,SAIA,EAAKH,MAAM6B,cACb,EAAKnC,MAAMC,aACX,EAAKD,MAAMgC,YANT,OAQNzB,SAASC,eAAe,UAAUU,MAAMC,QAAU,OAClDZ,SAASC,eAAe,OAAOU,MAAMC,QAAU,QATzC,2C,oFAzCNiB,KAAKhC,WACLgC,KAAKd,iB,0CAILc,KAAKhC,a,+BAiDL,OACI,yBAAKiC,UAAU,UACX,yBAAKA,UAAU,4BAA4BC,GAAG,UAC1C,yBAAKD,UAAU,kBAAf,sBAGJ,yBAAKC,GAAG,OACJ,yBAAKD,UAAU,qBAAqBC,GAAG,QACnC,yBAAKD,UAAU,cACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,aACb,qCAKZ,yBAAKA,UAAU,aAAaC,GAAG,QAC3B,oJAKA,yBAAKA,GAAG,aACJ,4BACID,UAAU,cACVC,GAAG,OACHC,SAAUH,KAAKT,cAEdS,KAAKxB,QALV,KAQA,4BACIyB,UAAU,cACVC,GAAG,KACHC,SAAUH,KAAKL,YAEdK,KAAKxB,UAGd,yBAAK0B,GAAG,aAER,4BACID,UAAU,SACVC,GAAG,SACHL,QAASG,KAAKH,SAHlB,uB,GA7GHO,IAAMC,YAkIZC,eAPS,SAAA1C,GACpB,MAAO,CACHc,OAAQd,EAAMc,OACdX,SAAUH,EAAMG,YAIgB,CAACgC,cC/HZ,SAACtB,EAAK8B,GAAN,8CAAa,WAAMC,GAAN,eAAAV,EAAA,sEACjBW,EAASC,IAAT,oBAA0BjC,EAA1B,YAAkC8B,IADjB,OAClCI,EADkC,OAGxCH,EAAS,CAAEI,KCXiB,iBDWKC,QAASF,EAASG,OAHX,2CAAb,wDD+HdR,CAA0C3C,GGnInDoD,E,2MACJC,kBAAoB,WAClB,EAAK9C,MAAM+C,e,wEAGX,OACE,yBAAKhB,UAAU,OACb,kBAAC,EAAD,W,GAPUG,IAAMC,WAaTC,cACb,KACA,CAAEW,YFjBuB,yDAAM,WAAMT,GAAN,eAAAV,EAAA,sEACRW,EAASC,IAAI,WADL,OACzBC,EADyB,OAG/BH,EAAS,CAAEI,KCNe,eDMKC,QAASF,EAASG,OAHlB,2CAAN,wDEeZR,CAGbS,GChBaG,cAAgB,CAC7BxC,OCJa,WAAyB,IAAxBd,EAAuB,uDAAf,GAAIuD,EAAW,uCACrC,OAAQA,EAAOP,MACb,IHJwB,eGKtB,MAAO,CAAEhD,MAAOuD,EAAON,SACzB,QACE,OAAOjD,IDAXG,SELa,WAAyB,IAAxBH,EAAuB,uDAAf,GAAIuD,EAAW,uCACrC,OAAQA,EAAOP,MACb,IJH0B,iBIIxB,MAAO,CAAEhD,MAAOuD,EAAON,SACzB,QACE,OAAOjD,MCGPwD,EAAoBC,OAAOC,sCAAwCC,IACnEC,EAAQC,YACVC,EACAN,EAAkBO,YAAgBC,OAGtCC,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,EAAD,OAEJrD,SAAS4D,cAAc,W","file":"static/js/main.bf1250c2.chunk.js","sourcesContent":["import axios from 'axios';\r\naxios.defaults.headers['Content-Type'] = 'application/json';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://cors-anywhere.herokuapp.com/https://still-sea-30153.herokuapp.com/'\r\n});","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport {checkDistance} from \"../../actions\";\r\nimport \"./style.css\";\r\n\r\nclass Picker extends React.Component {\r\n    state = {selectedFrom: \"\", To: \"\", distance: \"\"};\r\n\r\n    renderMy = () => {\r\n        if (this.props.distance.state === undefined) {\r\n            document.getElementById(\"distance\").innerHTML = \"\";\r\n        } else {\r\n            document.getElementById(\"distance\").innerHTML = `${JSON.stringify(\r\n                this.props.distance.state\r\n            )}km`;\r\n        }\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        this.renderMy();\r\n        this.enableButton();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.renderMy();\r\n    }\r\n\r\n    fetch = () => {\r\n        let from = \"\";\r\n        try {\r\n            from = `<option value=\"\" />`;\r\n            this.props.cities.state.forEach((element, index) => {\r\n                from += `<option value=${index}>${element}</option>`;\r\n            });\r\n            document.getElementById(\"loader\").style.display = \"none\";\r\n            document.getElementById(\"sec\").style.display = \"block\";\r\n            return ReactHtmlParser(from);\r\n        } catch (err) {\r\n        }\r\n    };\r\n\r\n    enableButton = () => {\r\n        if (\r\n            document.getElementById(\"from\").value !== \"\" &&\r\n            document.getElementById(\"to\").value !== \"\"\r\n        ) {\r\n            document.getElementById(\"button\").classList.add('enabled');\r\n        } else {\r\n            document.getElementById(\"button\").classList.remove('enabled');\r\n        }\r\n    };\r\n\r\n    onChangeFrom = e => {\r\n        this.setState({selectedFrom: e.target.value});\r\n    };\r\n\r\n    onChangeTo = e => {\r\n        this.setState({selectedTo: e.target.value});\r\n    };\r\n\r\n    onClick = async () => {\r\n        document.getElementById(\"loader\").style.display = \"block\";\r\n        document.getElementById(\"sec\").style.display = \"none\";\r\n        document.getElementById(\"distance\").innerHTML = \"\";\r\n        await this.props.checkDistance(\r\n            this.state.selectedFrom,\r\n            this.state.selectedTo\r\n        );\r\n        document.getElementById(\"loader\").style.display = \"none\";\r\n        document.getElementById(\"sec\").style.display = \"block\";\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Picker\">\r\n                <div className=\"ui active inverted dimmer\" id=\"loader\">\r\n                    <div className=\"ui text loader\">Ładowanie...</div>\r\n                </div>\r\n\r\n                <div id=\"sec\">\r\n                    <div className=\"ui secondary  menu\" id=\"menu\">\r\n                        <div className=\"right menu\">\r\n                            <div className=\"ui item\">\r\n                                <i className=\"map icon\"></i>\r\n                                <b>SKM</b>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"ui segment\" id=\"body\">\r\n                        <p>\r\n                            Czy Ciebie też irytuje czytanie tej ogromnej tabelki z wykazem\r\n                            odległości między stacjami od SKM?\r\n                        </p>\r\n\r\n                        <div id=\"selecting\">\r\n                            <select\r\n                                className=\"ui dropdown\"\r\n                                id=\"from\"\r\n                                onChange={this.onChangeFrom}\r\n                            >\r\n                                {this.fetch()}>\r\n                            </select>\r\n\r\n                            <select\r\n                                className=\"ui dropdown\"\r\n                                id=\"to\"\r\n                                onChange={this.onChangeTo}\r\n                            >\r\n                                {this.fetch()}\r\n                            </select>\r\n                        </div>\r\n                        <div id=\"distance\"></div>\r\n\r\n                        <button\r\n                            className=\"button\"\r\n                            id=\"button\"\r\n                            onClick={this.onClick}\r\n                        >\r\n                            Sprawdź\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cities: state.cities,\r\n        distance: state.distance\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {checkDistance})(Picker);\r\n","import { FETCH_CITIES,CHECK_DISTANCE } from \"./types\";\r\nimport myserver from \"../apis/server\";\r\n\r\nexport const fetchCities = () => async dispatch => {\r\n  const response = await myserver.get(\"/cities\");\r\n\r\n  dispatch({ type: FETCH_CITIES, payload: response.data });\r\n};\r\n\r\nexport const checkDistance = (from,to) => async dispatch => {\r\n  const response = await myserver.get(`/distance/${from}/${to}`);\r\n\r\n  dispatch({ type: CHECK_DISTANCE, payload: response.data });\r\n};\r\n","export const FETCH_CITIES = \"FETCH_CITIES\";\r\nexport const CHECK_DISTANCE = \"CHECK_DISTANCE\";\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchCities } from \"../actions\";\r\nimport Picker from \"./Picker\";\r\n\r\nclass App extends React.Component {\r\n  componentDidMount = () => {\r\n    this.props.fetchCities();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Picker />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { fetchCities }\r\n)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport citiesReducer from \"./citiesReducer\";\r\nimport distanceReducer from \"./distanceReducer\";\r\n\r\n\r\nexport default combineReducers({\r\n  cities: citiesReducer,\r\n  distance: distanceReducer\r\n});\r\n","import { FETCH_CITIES } from \"../../actions/types\";\r\n\r\nexport default (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case FETCH_CITIES:\r\n      return { state: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { CHECK_DISTANCE } from \"../../actions/types\";\r\n\r\nexport default (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case CHECK_DISTANCE:\r\n      return { state: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","  \r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport reduxThunk from 'redux-thunk';\r\nimport { createStore, applyMiddleware,compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from \"./components/App\";\r\nimport reducers from './reducers';\r\n\r\nconst coomposeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducers,\r\n    coomposeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}